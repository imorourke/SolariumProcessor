#include components/ktsk.cb
#include components/serialio.cb
#include components/kcpu.cb

global CLOCK_LOC: *u32 = 0xA022u32;
global CLOCK_INT: *u32 = 0xA02Au32;

fn main_tsk_a() void {
    def i_val: u32 = 0;
    while (1) {
        print("TSK_A\n");
        i_val = (i_val + 1) % 10;
    }
}

fn main_tsk_b() void {
    while (1) {
        print("TSK_B\n");
    }
}

fn main_tsk_c() void {
    while (1) {
        if (*SERIAL_IN_SIZE != 0) {
            k_cpu_intoff();
            while (*SERIAL_IN_SIZE != 0) {
                *SERIAL_OUT_LOC = *SERIAL_IN_LOC;
            }
            k_cpu_inton();
        }
        k_tsk_yield();
    }
}

fn main() void {
    def irq1_loc: *u32 = 0x104;
    *irq1_loc = k_tsk_yield;
    k_tsk_init(main_tsk_a);
    k_tsk_init(main_tsk_b);
    k_tsk_init(main_tsk_c);
    *CLOCK_LOC = 1000;
    *CLOCK_INT = 1;
    k_tsk_main();
}
