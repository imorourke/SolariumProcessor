#include components/ktsk.cb
#include components/kserialio.cb
#include components/kirq.cb
#include components/kclock.cb

fn main_tsk_a() void {
    def count: u32 = 0;
    while (count < 100) {
        if (count % 10 == 0) {
            k_io_print("TSK_A\n");
        }
        count = count + 1;
    }
}

fn main_tsk_b() void {
    def count: u32 = 0;
    while (1) {
        if (count % 20 == 0) {
            k_io_print("TSK_B\n");
            count = 0;
        }
        count = count + 1;
    }
}

fn main_tsk_c() void {
    while (1) {
        if (*SERIAL_IN_SIZE != 0) {
            asm { "intoff"; }
            while (*SERIAL_IN_SIZE != 0) {
                *SERIAL_OUT_LOC = *SERIAL_IN_LOC;
            }
            asm { "inton"; }
        }
        k_tsk_yield();
    }
}

global stack_a: [1024]u8;
global stack_b: [1024]u8;
global stack_c: [1024]u8;

fn main() void {
    k_tsk_init(main_tsk_a, &stack_a[0]);
    k_tsk_init(main_tsk_b, &stack_b[0]);
    k_tsk_init(main_tsk_c, &stack_c[0]);

    k_irq_set(1, k_tsk_yield);
    k_clock_configure(1000, 1);

    k_tsk_main();
}
